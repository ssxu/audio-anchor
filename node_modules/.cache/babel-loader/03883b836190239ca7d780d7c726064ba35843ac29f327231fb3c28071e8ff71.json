{"ast":null,"code":"var _jsxFileName = \"/Volumes/disk/code/learn-to-text/src/components/TranscriptionPlayer.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './TranscriptionPlayer.css';\nimport { callTranscriptionAPI } from '../services/transcriptionService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UploadIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4M17 8l-5-5-5 5M12 3v12\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = UploadIcon;\nconst LoadingIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  className: \"animate-spin\",\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n    className: \"opacity-25\",\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\",\n    stroke: \"currentColor\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    className: \"opacity-75\",\n    d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\n// 上传界面组件\n_c2 = LoadingIcon;\nconst UploadScreen = ({\n  onUpload,\n  isLoading,\n  error,\n  progress\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"upload-screen\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u4E0A\\u4F20\\u97F3\\u89C6\\u9891\\u6587\\u4EF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-input-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"upload-button\",\n        children: [/*#__PURE__*/_jsxDEV(UploadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), \"\\u9009\\u62E9\\u6587\\u4EF6\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"video/*,audio/*\",\n          onChange: onUpload,\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"processing-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u6B63\\u5728\\u5904\\u7406\\u4E2D\\uFF0C\\u8BF7\\u8010\\u5FC3\\u7B49\\u5F85...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"processing-steps\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${progress >= 1 ? 'completed' : 'active'}`,\n          children: \"1. \\u4E0A\\u4F20\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${progress >= 2 ? 'completed' : progress === 1 ? 'active' : ''}`,\n          children: \"2. \\u8F6C\\u5F55\\u5904\\u7406\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${progress >= 3 ? 'completed' : progress === 2 ? 'active' : ''}`,\n          children: \"3. \\u751F\\u6210\\u5B57\\u5E55\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [decodeUnicode(error), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"retry-button\",\n        onClick: () => window.location.reload(),\n        children: \"\\u91CD\\u65B0\\u4E0A\\u4F20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this);\n\n// 播放界面组件\n_c3 = UploadScreen;\nconst PlayerScreen = ({\n  file,\n  transcription,\n  onBack\n}) => {\n  _s();\n  const [currentText, setCurrentText] = useState('');\n  const [copySuccess, setCopySuccess] = useState(false);\n  const mediaRef = useRef(null);\n  const listRef = useRef(null);\n  const currentItemRef = useRef(null);\n  const handleTimeUpdate = () => {\n    if (transcription && mediaRef.current) {\n      const currentTime = mediaRef.current.currentTime;\n      const currentSegment = transcription.find(segment => currentTime >= segment.start && currentTime <= segment.end);\n      if (currentSegment && currentSegment.text !== currentText) {\n        setCurrentText(currentSegment.text);\n\n        // 滚动到当前播放的文本\n        const currentElement = document.querySelector('.transcription-item.active');\n        if (currentElement && listRef.current) {\n          listRef.current.scrollTo({\n            top: currentElement.offsetTop - listRef.current.offsetHeight / 2,\n            behavior: 'smooth'\n          });\n        }\n      }\n    }\n  };\n\n  // 添加跳转功能\n  const handleTranscriptionClick = startTime => {\n    if (mediaRef.current) {\n      mediaRef.current.currentTime = startTime;\n      mediaRef.current.play(); // 自动开始播放\n    }\n  };\n\n  // 修改复制功能\n  const handleCopyAll = async () => {\n    if (transcription) {\n      // 只提取文字内容，用换行符分隔\n      const allText = transcription.map(item => item.text).join('\\n');\n      try {\n        await navigator.clipboard.writeText(allText);\n        setCopySuccess(true);\n        // 3秒后重置复制成功状态\n        setTimeout(() => setCopySuccess(false), 3000);\n      } catch (err) {\n        console.error('复制失败:', err);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: onBack,\n        children: \"\\u8FD4\\u56DE\\u4E0A\\u4F20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-player\",\n          children: file.includes('video') ? /*#__PURE__*/_jsxDEV(\"video\", {\n            ref: mediaRef,\n            src: file,\n            controls: true,\n            onTimeUpdate: handleTimeUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n            ref: mediaRef,\n            src: file,\n            controls: true,\n            onTimeUpdate: handleTimeUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u5F53\\u524D\\u64AD\\u653E\\u6587\\u5B57\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-content\",\n            children: currentText || '等待播放...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcription-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u5B8C\\u6574\\u8F6C\\u5F55\\u6587\\u672C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `copy-button ${copySuccess ? 'success' : ''}`,\n            onClick: handleCopyAll,\n            disabled: copySuccess,\n            children: copySuccess ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M20 6L9 17l-5-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), \"\\u5DF2\\u590D\\u5236\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 24 24\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n                  x: \"9\",\n                  y: \"9\",\n                  width: \"13\",\n                  height: \"13\",\n                  rx: \"2\",\n                  ry: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M5 15H4a2 2 0 01-2-2V4a2 2 0 012-2h9a2 2 0 012 2v1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this), \"\\u590D\\u5236\\u5168\\u90E8\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-content\",\n          ref: listRef,\n          children: transcription && transcription.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `transcription-item ${currentText === item.text ? 'active' : ''}`,\n            onClick: () => handleTranscriptionClick(item.start),\n            ref: currentText === item.text ? currentItemRef : null,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time\",\n              children: [formatTime(item.start), \" - \", formatTime(item.end)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)]\n          }, item.line, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n// 添加时间格式化函数\n_s(PlayerScreen, \"vnJ9iVOj31dcgZB1/vAX08iMSS4=\");\n_c4 = PlayerScreen;\nconst formatTime = seconds => {\n  const pad = num => String(num).padStart(2, '0');\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = Math.floor(seconds % 60);\n  return `${pad(minutes)}:${pad(remainingSeconds)}`;\n};\nconst decodeUnicode = str => {\n  try {\n    if (/[\\u4e00-\\u9fa5]/.test(str)) {\n      return str;\n    }\n    return str.replace(/\\\\u([0-9a-fA-F]{4})/g, (match, grp) => String.fromCharCode(parseInt(grp, 16)));\n  } catch (e) {\n    console.error('解码文字失败:', e);\n    return str;\n  }\n};\nconst TranscriptionPlayer = () => {\n  _s2();\n  const [file, setFile] = useState(null);\n  const [transcription, setTranscription] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [progress, setProgress] = useState(0);\n  const [showPlayer, setShowPlayer] = useState(false);\n  const handleFileUpload = async event => {\n    const uploadedFile = event.target.files[0];\n    if (uploadedFile) {\n      setFile(URL.createObjectURL(uploadedFile));\n      setIsLoading(true);\n      setError('');\n      setProgress(0);\n      try {\n        // 更新上传进度\n        setProgress(1);\n\n        // 调用转录API\n        setProgress(2);\n        const response = await callTranscriptionAPI(uploadedFile);\n        if (response.code !== 0) {\n          throw new Error(response.msg);\n        }\n\n        // 处理返回数据\n        const formattedTranscription = response.data.map(item => ({\n          line: item.line,\n          start: item.start_time / 1000,\n          end: item.end_time / 1000,\n          text: decodeUnicode(item.text)\n        }));\n        setTranscription(formattedTranscription);\n        setProgress(3);\n\n        // 延迟显示播放界面，让用户看到处理完成的状态\n        setTimeout(() => {\n          setShowPlayer(true);\n        }, 1000);\n      } catch (error) {\n        setError(error.message);\n        setFile(null);\n      } finally {\n        setIsLoading(false);\n        setProgress(0);\n      }\n    }\n  };\n  const handleBack = () => {\n    setFile(null);\n    setTranscription(null);\n    setError('');\n    setShowPlayer(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transcription-player\",\n    children: !showPlayer || error ? /*#__PURE__*/_jsxDEV(UploadScreen, {\n      onUpload: handleFileUpload,\n      isLoading: isLoading,\n      error: error,\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(PlayerScreen, {\n      file: file,\n      transcription: transcription,\n      onBack: handleBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n};\n_s2(TranscriptionPlayer, \"9laSwmyZV2iqLCAgy6wIUZ7t7PI=\");\n_c5 = TranscriptionPlayer;\nexport default TranscriptionPlayer;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"UploadIcon\");\n$RefreshReg$(_c2, \"LoadingIcon\");\n$RefreshReg$(_c3, \"UploadScreen\");\n$RefreshReg$(_c4, \"PlayerScreen\");\n$RefreshReg$(_c5, \"TranscriptionPlayer\");","map":{"version":3,"names":["React","useState","useRef","callTranscriptionAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadIcon","viewBox","fill","stroke","strokeWidth","children","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","LoadingIcon","className","cx","cy","r","_c2","UploadScreen","onUpload","isLoading","error","progress","type","accept","onChange","disabled","decodeUnicode","onClick","window","location","reload","_c3","PlayerScreen","file","transcription","onBack","_s","currentText","setCurrentText","copySuccess","setCopySuccess","mediaRef","listRef","currentItemRef","handleTimeUpdate","current","currentTime","currentSegment","find","segment","start","end","text","currentElement","document","querySelector","scrollTo","top","offsetTop","offsetHeight","behavior","handleTranscriptionClick","startTime","play","handleCopyAll","allText","map","item","join","navigator","clipboard","writeText","setTimeout","err","console","includes","ref","src","controls","onTimeUpdate","x","y","width","height","rx","ry","formatTime","line","_c4","seconds","pad","num","String","padStart","minutes","Math","floor","remainingSeconds","str","test","replace","match","grp","fromCharCode","parseInt","e","TranscriptionPlayer","_s2","setFile","setTranscription","setIsLoading","setError","setProgress","showPlayer","setShowPlayer","handleFileUpload","event","uploadedFile","target","files","URL","createObjectURL","response","code","Error","msg","formattedTranscription","data","start_time","end_time","message","handleBack","_c5","$RefreshReg$"],"sources":["/Volumes/disk/code/learn-to-text/src/components/TranscriptionPlayer.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './TranscriptionPlayer.css';\nimport { callTranscriptionAPI } from '../services/transcriptionService';\n\nconst UploadIcon = () => (\n  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4M17 8l-5-5-5 5M12 3v12\"/>\n  </svg>\n);\n\nconst LoadingIcon = () => (\n  <svg className=\"animate-spin\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\"/>\n    <path className=\"opacity-75\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"/>\n  </svg>\n);\n\n// 上传界面组件\nconst UploadScreen = ({ onUpload, isLoading, error, progress }) => (\n  <div className=\"upload-screen\">\n    <div className=\"upload-container\">\n      <h2>上传音视频文件</h2>\n      {!isLoading && (\n        <div className=\"file-input-wrapper\">\n          <label className=\"upload-button\">\n            <UploadIcon />\n            选择文件\n            <input \n              type=\"file\" \n              accept=\"video/*,audio/*\" \n              onChange={onUpload}\n              disabled={isLoading}\n            />\n          </label>\n        </div>\n      )}\n      \n      {isLoading && (\n        <div className=\"processing-container\">\n          <div className=\"loading\">\n            <LoadingIcon />\n            <span>正在处理中，请耐心等待...</span>\n          </div>\n          <div className=\"processing-steps\">\n            <div className={`step ${progress >= 1 ? 'completed' : 'active'}`}>\n              1. 上传文件\n            </div>\n            <div className={`step ${progress >= 2 ? 'completed' : progress === 1 ? 'active' : ''}`}>\n              2. 转录处理\n            </div>\n            <div className={`step ${progress >= 3 ? 'completed' : progress === 2 ? 'active' : ''}`}>\n              3. 生成字幕\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {error && (\n        <div className=\"error-message\">\n          {decodeUnicode(error)}\n          <button className=\"retry-button\" onClick={() => window.location.reload()}>\n            重新上传\n          </button>\n        </div>\n      )}\n    </div>\n  </div>\n);\n\n// 播放界面组件\nconst PlayerScreen = ({ file, transcription, onBack }) => {\n  const [currentText, setCurrentText] = useState('');\n  const [copySuccess, setCopySuccess] = useState(false);\n  const mediaRef = useRef(null);\n  const listRef = useRef(null);\n  const currentItemRef = useRef(null);\n\n  const handleTimeUpdate = () => {\n    if (transcription && mediaRef.current) {\n      const currentTime = mediaRef.current.currentTime;\n      const currentSegment = transcription.find(\n        segment => currentTime >= segment.start && currentTime <= segment.end\n      );\n      \n      if (currentSegment && currentSegment.text !== currentText) {\n        setCurrentText(currentSegment.text);\n        \n        // 滚动到当前播放的文本\n        const currentElement = document.querySelector('.transcription-item.active');\n        if (currentElement && listRef.current) {\n          listRef.current.scrollTo({\n            top: currentElement.offsetTop - listRef.current.offsetHeight / 2,\n            behavior: 'smooth'\n          });\n        }\n      }\n    }\n  };\n\n  // 添加跳转功能\n  const handleTranscriptionClick = (startTime) => {\n    if (mediaRef.current) {\n      mediaRef.current.currentTime = startTime;\n      mediaRef.current.play(); // 自动开始播放\n    }\n  };\n\n  // 修改复制功能\n  const handleCopyAll = async () => {\n    if (transcription) {\n      // 只提取文字内容，用换行符分隔\n      const allText = transcription\n        .map(item => item.text)\n        .join('\\n');\n      \n      try {\n        await navigator.clipboard.writeText(allText);\n        setCopySuccess(true);\n        // 3秒后重置复制成功状态\n        setTimeout(() => setCopySuccess(false), 3000);\n      } catch (err) {\n        console.error('复制失败:', err);\n      }\n    }\n  };\n\n  return (\n    <div className=\"player-screen\">\n      <div className=\"player-header\">\n        <button className=\"back-button\" onClick={onBack}>\n          返回上传\n        </button>\n      </div>\n      \n      <div className=\"player-content\">\n        <div className=\"player-left\">\n          <div className=\"media-player\">\n            {file.includes('video') ? (\n              <video\n                ref={mediaRef}\n                src={file}\n                controls\n                onTimeUpdate={handleTimeUpdate}\n              />\n            ) : (\n              <audio\n                ref={mediaRef}\n                src={file}\n                controls\n                onTimeUpdate={handleTimeUpdate}\n              />\n            )}\n          </div>\n          \n          <div className=\"current-text\">\n            <h3>当前播放文字</h3>\n            <div className=\"text-content\">\n              {currentText || '等待播放...'}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"transcription-list\">\n          <div className=\"list-header\">\n            <h3>完整转录文本</h3>\n            <button \n              className={`copy-button ${copySuccess ? 'success' : ''}`}\n              onClick={handleCopyAll}\n              disabled={copySuccess}\n            >\n              {copySuccess ? (\n                <>\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                    <path d=\"M20 6L9 17l-5-5\"/>\n                  </svg>\n                  已复制\n                </>\n              ) : (\n                <>\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                    <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"/>\n                    <path d=\"M5 15H4a2 2 0 01-2-2V4a2 2 0 012-2h9a2 2 0 012 2v1\"/>\n                  </svg>\n                  复制全部\n                </>\n              )}\n            </button>\n          </div>\n          <div className=\"list-content\" ref={listRef}>\n            {transcription && transcription.map((item) => (\n              <div \n                key={item.line}\n                className={`transcription-item ${currentText === item.text ? 'active' : ''}`}\n                onClick={() => handleTranscriptionClick(item.start)}\n                ref={currentText === item.text ? currentItemRef : null}\n              >\n                <span className=\"time\">\n                  {formatTime(item.start)} - {formatTime(item.end)}\n                </span>\n                <p>{item.text}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// 添加时间格式化函数\nconst formatTime = (seconds) => {\n  const pad = (num) => String(num).padStart(2, '0');\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = Math.floor(seconds % 60);\n  return `${pad(minutes)}:${pad(remainingSeconds)}`;\n};\n\nconst decodeUnicode = (str) => {\n  try {\n    if (/[\\u4e00-\\u9fa5]/.test(str)) {\n      return str;\n    }\n    return str.replace(/\\\\u([0-9a-fA-F]{4})/g, (match, grp) =>\n      String.fromCharCode(parseInt(grp, 16))\n    );\n  } catch (e) {\n    console.error('解码文字失败:', e);\n    return str;\n  }\n};\n\nconst TranscriptionPlayer = () => {\n  const [file, setFile] = useState(null);\n  const [transcription, setTranscription] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [progress, setProgress] = useState(0);\n  const [showPlayer, setShowPlayer] = useState(false);\n\n  const handleFileUpload = async (event) => {\n    const uploadedFile = event.target.files[0];\n    if (uploadedFile) {\n      setFile(URL.createObjectURL(uploadedFile));\n      setIsLoading(true);\n      setError('');\n      setProgress(0);\n      \n      try {\n        // 更新上传进度\n        setProgress(1);\n        \n        // 调用转录API\n        setProgress(2);\n        const response = await callTranscriptionAPI(uploadedFile);\n        \n        if (response.code !== 0) {\n          throw new Error(response.msg);\n        }\n\n        // 处理返回数据\n        const formattedTranscription = response.data.map(item => ({\n          line: item.line,\n          start: item.start_time / 1000,\n          end: item.end_time / 1000,\n          text: decodeUnicode(item.text)\n        }));\n        \n        setTranscription(formattedTranscription);\n        setProgress(3);\n        \n        // 延迟显示播放界面，让用户看到处理完成的状态\n        setTimeout(() => {\n          setShowPlayer(true);\n        }, 1000);\n        \n      } catch (error) {\n        setError(error.message);\n        setFile(null);\n      } finally {\n        setIsLoading(false);\n        setProgress(0);\n      }\n    }\n  };\n\n  const handleBack = () => {\n    setFile(null);\n    setTranscription(null);\n    setError('');\n    setShowPlayer(false);\n  };\n\n  return (\n    <div className=\"transcription-player\">\n      {!showPlayer || error ? (\n        <UploadScreen \n          onUpload={handleFileUpload}\n          isLoading={isLoading}\n          error={error}\n          progress={progress}\n        />\n      ) : (\n        <PlayerScreen \n          file={file}\n          transcription={transcription}\n          onBack={handleBack}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default TranscriptionPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}